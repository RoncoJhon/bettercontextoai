"use strict";var N=Object.create;var w=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var z=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,X=Object.prototype.hasOwnProperty;var Z=(n,t)=>{for(var e in t)w(n,e,{get:t[e],enumerable:!0})},M=(n,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of z(t))!X.call(n,o)&&o!==e&&w(n,o,{get:()=>t[o],enumerable:!(s=j(t,o))||s.enumerable});return n};var E=(n,t,e)=>(e=n!=null?N(L(n)):{},M(t||!n||!n.__esModule?w(e,"default",{value:n,enumerable:!0}):e,n)),$=n=>M(w({},"__esModule",{value:!0}),n);var V={};Z(V,{activate:()=>R,deactivate:()=>B});module.exports=$(V);var l=E(require("vscode")),u=require("fs"),F=require("path");var y=E(require("vscode")),f=require("fs"),p=require("path");var v=E(require("vscode")),I=class extends v.TreeItem{constructor(e,s,o,i,r=!1){super(e,o);this.label=e;this.fullPath=s;this.collapsibleState=o;this.isFolder=i,this.selected=r,this.iconPath=r?new v.ThemeIcon("check"):new v.ThemeIcon("circle-outline"),this.command={command:"extension.toggleSelection",title:"Toggle Selection",arguments:[this]}}selected;isFolder};var T=class{constructor(t){this.rootPath=t}_onDidChangeTreeData=new y.EventEmitter;onDidChangeTreeData=this._onDidChangeTreeData.event;selectionMap=new Map;refresh(){this._onDidChangeTreeData.fire()}getTreeItem(t){return t}getChildren(t){let e=t?t.fullPath:this.rootPath,s=[];try{s=(0,f.readdirSync)(e).filter(i=>i!=="FILE_CONTENT_MAP.md").map(i=>{let r=(0,p.join)(e,i),m=(0,f.lstatSync)(r).isDirectory(),g=m?y.TreeItemCollapsibleState.Collapsed:y.TreeItemCollapsibleState.None,a=this.selectionMap.get(r)||!1;return new I(i,r,g,m,a)})}catch(o){console.error(o)}return Promise.resolve(s)}setSelectionRecursive(t,e){this.selectionMap.set(t,e);try{if((0,f.lstatSync)(t).isDirectory()){let s=(0,f.readdirSync)(t);for(let o of s){let i=(0,p.join)(t,o);this.setSelectionRecursive(i,e)}}}catch{}}updateParentSelection(t){let e=(0,p.dirname)(t);!e||e===t||(this.selectionMap.set(e,!1),this.updateParentSelection(e))}toggleSelection(t){let s=!(this.selectionMap.get(t.fullPath)||!1);t.isFolder?(this.setSelectionRecursive(t.fullPath,s),s||this.updateParentSelection(t.fullPath)):(this.selectionMap.set(t.fullPath,s),s||this.updateParentSelection(t.fullPath)),this.refresh()}async getSelectedItems(){let t=[],e=s=>{let o;try{o=(0,f.readdirSync)(s)}catch{return}for(let i of o){let r=(0,p.join)(s,i),c;try{c=(0,f.lstatSync)(r)}catch{continue}let m=c.isDirectory();this.selectionMap.get(r)&&t.push(r),m&&e(r)}};return e(this.rootPath),t}};var d=require("fs"),P=require("path");function x(n){let t=n.map(e=>(0,P.normalize)(e).replace(/\\/g,"/"));return t.filter(e=>!t.some(s=>s!==e&&e.startsWith(s+"/")))}function _(n,t){let e={},o=[".git","node_modules","dist","build","yarn.lock","package-lock.json",".yarnrc",".pdf",".png",".exe",".ico",".txt",".zip",".tar",".gz",".jpg",".jpeg",".svg",".gif",".mp4",".mp3",".wav",".avi",".webm",".mov"];if(t<=0)return e;let i;try{i=(0,d.readdirSync)(n)}catch{return e}for(let r of i){let c=(0,P.join)(n,r),m=(0,d.lstatSync)(c);if(!(o.find(a=>r.includes(a))||r.includes("test")||r.includes("ignore")||r.includes(".spec")||r.includes(".md")))if(m.isDirectory())e[r]=_(c,t-1);else if(m.size<=51200)try{let a=(0,d.readFileSync)(c,"utf8");e[r]={type:"file",content:a,path:c}}catch{e[r]={type:"file",content:"[Error reading file]",path:c}}else e[r]={type:"file",content:"[File too large, omitted]",path:c}}return e}function D(n,t=2){let e={};return n.forEach(o=>{if(!(0,d.existsSync)(o)){console.error("Path does not exist:",o);return}let i=(0,d.lstatSync)(o);if(i.isDirectory())e[o]=_(o,t);else if(i.size<=51200)try{let r=(0,d.readFileSync)(o,"utf8");e[o]={type:"file",content:r,path:o}}catch{e[o]={type:"file",content:"[Error reading file]",path:o}}else e[o]={type:"file",content:"[File too large, omitted]",path:o}}),e}function O(n,t){let e=(0,F.join)(n,".gitignore");if((0,u.existsSync)(e))try{(0,u.readFileSync)(e,"utf8").split(`
`).map(i=>i.trim()).includes(t)||(0,u.appendFileSync)(e,`

# Added by Better Context to AI
${t}`)}catch(s){console.error("Better Context to AI: Failed to read or write to .gitignore:",s)}}function R(n){let t=l.workspace.workspaceFolders?l.workspace.workspaceFolders[0].uri.fsPath:"";if(!t){l.window.showErrorMessage("No workspace folder found.");return}O(t,"FILE_CONTENT_MAP.md");let e=new T(t),s=l.window.createTreeView("fileSelector",{treeDataProvider:e,showCollapseAll:!0}),o=l.commands.registerCommand("extension.toggleSelection",c=>{e.toggleSelection(c)}),i=l.commands.registerCommand("extension.generateFileContentMap",async()=>{let c=await e.getSelectedItems();if(c.length===0){l.window.showErrorMessage("No files or folders selected.");return}let m=x(c),g=D(m,2),a="";function b(S){for(let A in S){let h=S[A];if(h&&h.type==="file"&&h.path){let k=(0,F.normalize)(h.path).replace(/\\/g,"/");a+=`<!-- "${k}": -->
`,a+=`${h.content}

`}else typeof h=="object"&&b(h)}}b(g);let C=(0,F.join)(t,"FILE_CONTENT_MAP.md");(0,u.writeFileSync)(C,a,"utf8"),l.window.showInformationMessage(`Saved file content map to ${C}`),l.workspace.openTextDocument(C).then(S=>{l.window.showTextDocument(S)})}),r=l.commands.registerCommand("extension.refreshFileTree",()=>{e.refresh(),l.window.showInformationMessage("File tree refreshed.")});n.subscriptions.push(o,i,r,s)}function B(){}0&&(module.exports={activate,deactivate});
